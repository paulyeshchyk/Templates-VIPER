//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import UIKit

typealias {{ prefix }}{{ module_info.name }}ModuleAddDetailOutput = ()->()
typealias {{ prefix }}{{ module_info.name }}ModuleOpenDetailOutput = (item:{{ prefix }}{{ module_info.name }}Model)->()
protocol {{ prefix }}{{ module_info.name }}ModuleProtocol:ModuleProtocol {

    var presenter:{{ prefix }}{{ module_info.name }}PresenterProtocol {get set}
    var listView:{{ prefix }}{{ module_info.name }}ViewProtocol {get set}
    var addOutput:{{ prefix }}{{ module_info.name }}ModuleAddDetailOutput? { get set}
    var openOutput:{{ prefix }}{{ module_info.name }}ModuleOpenDetailOutput? { get set}
    func updatePonso(ponso:{{ prefix }}{{ module_info.name }}Model)
    func refreshPonso(ponso:{{ prefix }}{{ module_info.name }}Model)
}

protocol {{ prefix }}{{ module_info.name }}ViewProtocol:ViewProtocol {

    var input:{{ prefix }}{{ module_info.name }}InteractorProtocol? {get set}
    var output:{{ prefix }}{{ module_info.name }}PresenterProtocol? {get set}
    func reloadTableview()
    func reloadItemAtIndex(index:Int)
}

protocol {{ prefix }}{{ module_info.name }}DataSourceListenerProtocol {

    func hasUpdatedData()
}

protocol {{ prefix }}{{ module_info.name }}DatasourceProtocol {

    var listener:{{ prefix }}{{ module_info.name }}DataSourceListenerProtocol? {get set}
    func numberOfItems()->Int
    func itemAtIndex(index:Int)->{{ prefix }}{{ module_info.name }}Model
    func indexOfItem(item:{{ prefix }}{{ module_info.name }}Model)->Int
    func updatePonso(ponso:{{ prefix }}{{ module_info.name }}Model)
    func addPonso(ponso:{{ prefix }}{{ module_info.name }}Model)
}

protocol {{ prefix }}{{ module_info.name }}InteractorProtocol {

    init(datasource:{{ prefix }}{{ module_info.name }}DatasourceProtocol)

    func refetchData()

    var selectedItem:String? { get set }
    var output:{{ prefix }}{{ module_info.name }}PresenterProtocol? { get set}
    func listItemsCount()->Int
    func listItemAtIndex(index:Int)->{{ prefix }}{{ module_info.name }}Model
}

protocol {{ prefix }}{{ module_info.name }}PresenterProtocol:PresenterProtocol {

    var output:{{ prefix }}{{ module_info.name }}PresenterOutputProtocol? {get set}

    init(view:{{ prefix }}{{ module_info.name }}ViewProtocol, interactor:{{ prefix }}{{ module_info.name }}InteractorProtocol)

    func openDetailAtIndex(index:Int)
    func redrawData()
    func fetchData()
    func addItem()
    func redrawItemAtIndex(index:Int)
}

protocol {{ prefix }}{{ module_info.name }}PresenterOutputProtocol {

    func openAddDetail()
    func openItem(item:{{ prefix }}{{ module_info.name }}Model)

}

