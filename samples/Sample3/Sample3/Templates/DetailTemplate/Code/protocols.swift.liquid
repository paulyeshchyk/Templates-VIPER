//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import UIKit

protocol {{ prefix }}{{ module_info.name }}InteractorProtocol {

    var output:{{ prefix }}{{ module_info.name }}PresenterProtocol? { get set }
    func fetchData()
}

typealias {{ prefix }}{{ module_info.name }}ManagerResultCompletionBlock = (result:{{ prefix }}{{ module_info.name }}Model?, error:NSError?)->()

protocol {{ prefix }}{{ module_info.name }}ManagerProtocol {

    func findItem(usingPredicate:NSPredicate, completion:{{ prefix }}{{ module_info.name }}ManagerResultCompletionBlock)
}

protocol {{ prefix }}{{ module_info.name }}ModuleProtocol {

    var view:UIViewController {get}
    var presenter:{{ prefix }}{{ module_info.name }}PresenterProtocol { get set}
}

protocol {{ prefix }}{{ module_info.name }}ViewProtocol {

    var output:{{ prefix }}{{ module_info.name }}PresenterProtocol? { get set }
    var viewController:UIViewController { get }
    
    var sampleProperty:String? { get set }
    var sampleError:String? { get set }
}

protocol {{ prefix }}{{ module_info.name }}PresenterOutputProtocol {

}

protocol {{ prefix }}{{ module_info.name }}PresenterProtocol:PresenterProtocol {

    var output:{{ prefix }}{{ module_info.name }}PresenterOutputProtocol? { get set }

    init(view:{{ prefix }}{{ module_info.name }}ViewProtocol, interactor:{{ prefix }}{{ module_info.name }}InteractorProtocol)
	func viewHasBeenLoaded()    
    func presentDetail(detail:{{ prefix }}{{ module_info.name }}Model)
    func presentError(error:NSError)
    
}



