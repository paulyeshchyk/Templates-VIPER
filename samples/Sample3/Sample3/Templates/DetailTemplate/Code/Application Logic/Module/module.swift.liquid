//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import UIKit

class {{ prefix }}{{ module_info.name }}Module: NSObject, {{ prefix }}{{ module_info.name }}ModuleProtocol, {{ prefix }}{{ module_info.name }}PresenterOutputProtocol {

	//MARK: - NSObject
	    
    deinit {
        
        rootView.output = nil
        presenter.output = nil
    }

	//MARK: - {{ prefix }}{{ module_info.name }}ModuleProtocol
	
    var rootWindow:UIWindow
    var presenter:{{ prefix }}{{ module_info.name }}PresenterProtocol
    var rootView:{{ prefix }}{{ module_info.name }}ViewProtocol
    var rootInteractor:{{ prefix }}{{ module_info.name }}InteractorProtocol
    var view: UIViewController {
        
        get {
            
            return self.rootView.viewController
        }
    }
    var saveOutput: {{ prefix }}{{ module_info.name }}ModuleSaveOutput?
    var cancelOutput: {{ prefix }}{{ module_info.name }}ModuleCancelAddDetailOutput?


    var detail: {{ prefix }}{{ module_info.name }}Model? {

        didSet {

            self.presenter.detail = self.detail
        }
    }

    required init(window:UIWindow) {
        
        rootWindow = window
        rootInteractor = {{ prefix }}{{ module_info.name }}Interactor()
        
        rootView = {{ prefix }}{{ module_info.name }}ViewController(nibName:"{{ prefix }}{{ module_info.name }}ViewController", bundle: NSBundle.mainBundle())
        presenter = {{ prefix }}{{ module_info.name }}Presenter(view: rootView, interactor:rootInteractor)
        rootView.output = presenter
        
        super.init()

        presenter.output = self
    }

    func pushFrom(navigationController:UINavigationController) {

        navigationController.pushViewController(self.view, animated: true)
    }

    func popFrom(navigationController: UINavigationController) {

        navigationController.popViewControllerAnimated(true)
    }

    func makeRoot() -> UIViewController{

        rootWindow.rootViewController = self.view
        rootWindow.makeKeyAndVisible()
        return self.view
    }
}
