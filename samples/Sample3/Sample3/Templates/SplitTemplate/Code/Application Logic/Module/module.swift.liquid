//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

class {{ prefix }}{{ module_info.name }}Module: {{ prefix }}{{ module_info.name }}ModuleProtocol {

    var presenter:{{ prefix }}{{ module_info.name }}PresenterProtocol
    var splitView:{{ prefix }}{{ module_info.name }}ViewProtocol
    var interactor:{{ prefix }}{{ module_info.name }}InteractorProtocol
    var rootWindow:UIWindow


    var view: UIViewController {

        get {

            return self.splitView.viewController
        }
    }

    var emptyDetailPresenter: PresenterProtocol? {

        didSet {

            self.presenter.emptyDetailPresenter = emptyDetailPresenter
        }
    }

    var masterPresenter: PresenterProtocol? {

        didSet {

            self.presenter.masterPresenter = masterPresenter
        }
    }

    var detailPresenter: PresenterProtocol? {

        didSet {

            self.presenter.detailPresenter = detailPresenter
        }
    }

    required init(window: UIWindow) {

        rootWindow = window

        splitView = {{ prefix }}{{ module_info.name }}ViewController()
        interactor = {{ prefix }}{{ module_info.name }}Interactor()

        presenter = {{ prefix }}{{ module_info.name }}Presenter(view: splitView, splitInteractor: interactor)

    }


    func pushFrom(navigationController:UINavigationController) {

        navigationController.pushViewController(self.view, animated: true)
    }

    func popFrom(navigationController: UINavigationController) {

        navigationController.popViewControllerAnimated(true)
    }

    func makeRoot() -> UIViewController{

        rootWindow.rootViewController = self.view
        rootWindow.makeKeyAndVisible()
        return self.view
    }

}
