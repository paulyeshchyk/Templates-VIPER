//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation

class {{ prefix }}{{ module_info.name }}Interactor: NSObject, {{ prefix }}{{ module_info.name }}InteractorProtocol, {{ prefix }}{{ module_info.name }}DataSourceListenerProtocol {

    var output:{{ prefix }}{{ module_info.name }}PresenterProtocol?
    var datasource:{{ prefix }}{{ module_info.name }}DatasourceProtocol
    var selectedItem:String?

    deinit {

        self.datasource.listener = nil
    }

    required init(datasource: {{ prefix }}{{ module_info.name }}DatasourceProtocol) {

        self.datasource = datasource
        super.init()
        self.datasource.listener = self
    }


    func refetchData() {

        //TODO: make service call

        output?.redrawData()
    }

    func listItemsCount()->Int {

        return self.datasource.numberOfItems()
    }

    func listItemAtIndex(index:Int)->{{ prefix }}{{ module_info.name }}Model {

        return self.datasource.itemAtIndex(index)
    }

    func hasUpdatedData() {

        self.refetchData()
    }

}
